{"version":3,"sources":["../../src/pages/grid/grid.module.ts","../../node_modules/@ionic-native/screen-orientation/index.js","../../src/pages/grid/grid.ts","../../node_modules/rxjs/observable/combineLatest.js","../../node_modules/rxjs/operators/combineLatest.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACc;AACrB;AACoB;AACe;AACnB;AAgBlD;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAd1B,+DAAQ,CAAC;YACN,YAAY,EAAE;gBACV,uDAAQ;aACX;YACD,OAAO,EAAE;gBACL,6EAAe,CAAC,QAAQ,CAAC,uDAAQ,CAAC;gBAClC,4EAAe,CAAC,QAAQ,EAAE;aAC7B;YACD,SAAS,EAAE;gBACP,2FAAiB;gBACjB,wEAAQ;aACX;SACJ,CAAC;OAEW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;ACrB3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AAC2C;AAC8C;AAC5C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC,gBAAgB;AAChB;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC,kBAAkB;AAClB;AACA;AACA;AACA;AACA,6BAA6B,OAAO;AACpC,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS,OAAO,yDAAU,EAAE;AAC5B;AACA;AACA,QAAQ,2EAAO;AACf;AACA;AACA,SAAS;AACT;AACA;AACA,wCAAwC,2DAAU;AAClD;AACA;AACA,QAAQ,2EAAO,EAAE,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAO,EAAE,aAAa;AAC9B;AACA;AACA;AACA;AACA;AACA,QAAQ,2EAAe;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oBAAoB;AACnC;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,0EAAM;AACd;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC,CAAC,6EAAiB;AACU;AAC7B,iC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9NyE;AAC/B;AACsB;AACP;AACM;AACF;AACsB;AACd;AACnB;AACF;AAIc;AAEL;AACL;AACuB;AAChC;AACiB;AAC3B;AAUjC;IAsFI,kBACY,SAA0B,EAC3B,OAAsB,EACrB,iBAAoC,EACpC,MAAc,EACd,KAAY,EACb,QAAwB,EACxB,SAAoB,EACpB,QAAkB,EAClB,GAAgB,EACf,MAAsB,EACvB,MAAuB,EACtB,WAA8B,EAC9B,WAAwB,EACxB,SAAoB,EACpB,MAAc,EACf,WAA8B,EAC7B,QAAkB,EAClB,EAAY;QAlBxB,iBA4KC;QA3KW,cAAS,GAAT,SAAS,CAAiB;QAC3B,YAAO,GAAP,OAAO,CAAe;QACrB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,WAAM,GAAN,MAAM,CAAQ;QACd,UAAK,GAAL,KAAK,CAAO;QACb,aAAQ,GAAR,Q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CtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B,WAAW,gBAAgB;AAC3B;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,UAAU;AACrB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;ACvIa;AACb;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA,wBAAwB,mBAAO,CAAC,GAA+B;AAC/D,gBAAgB,mBAAO,CAAC,GAAiB;AACzC,wBAAwB,mBAAO,CAAC,EAAoB;AACpD,0BAA0B,mBAAO,CAAC,EAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS;AACT,SAAS;AACT;AACA,WAAW,gBAAgB;AAC3B;AACA,WAAW,SAAS;AACpB;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kIAAkI;AAChK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,yC","file":"2.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { IonicPageModule } from \"ionic-angular/module\";\r\nimport { GridPage } from \"./grid\";\r\nimport { TranslateModule } from \"@ngx-translate/core\";\r\nimport { ScreenOrientation } from \"@ionic-native/screen-orientation\";\r\nimport { Keyboard } from \"@ionic-native/keyboard\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        GridPage\r\n    ],\r\n    imports: [\r\n        IonicPageModule.forChild(GridPage),\r\n        TranslateModule.forChild()\r\n    ],\r\n    providers: [\r\n        ScreenOrientation,\r\n        Keyboard\r\n    ]\r\n})\r\n\r\nexport class GridPageModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/pages/grid/grid.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, CordovaProperty, IonicNativePlugin, Plugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n/**\n * @name Screen Orientation\n * @description\n * Cordova plugin to set/lock the screen orientation in a common way.\n *\n * Requires Cordova plugin: `cordova-plugin-screen-orientation`. For more info, please see the [Screen Orientation plugin docs](https://github.com/apache/cordova-plugin-screen-orientation).\n *\n * @usage\n * ```typescript\n * import { ScreenOrientation } from '@ionic-native/screen-orientation';\n *\n * constructor(private screenOrientation: ScreenOrientation) { }\n *\n * ...\n *\n *\n * // get current\n * console.log(this.screenOrientation.type); // logs the current orientation, example: 'landscape'\n *\n * // set to landscape\n * this.screenOrientation.lock(this.screenOrientation.ORIENTATIONS.LANDSCAPE);\n *\n * // allow user rotate\n * this.screenOrientation.unlock();\n *\n * // detect orientation changes\n * this.screenOrientation.onChange().subscribe(\n *    () => {\n *        console.log(\"Orientation Changed\");\n *    }\n * );\n *\n * ```\n *\n * @advanced\n *\n * Accepted orientation values:\n *\n * | Value                         | Description                                                                  |\n * |-------------------------------|------------------------------------------------------------------------------|\n * | portrait-primary              | The orientation is in the primary portrait mode.                             |\n * | portrait-secondary            | The orientation is in the secondary portrait mode.                           |\n * | landscape-primary             | The orientation is in the primary landscape mode.                            |\n * | landscape-secondary           | The orientation is in the secondary landscape mode.                          |\n * | portrait                      | The orientation is either portrait-primary or portrait-secondary (sensor).   |\n * | landscape                     | The orientation is either landscape-primary or landscape-secondary (sensor). |\n *\n */\nvar ScreenOrientation = (function (_super) {\n    __extends(ScreenOrientation, _super);\n    function ScreenOrientation() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n           * Convenience enum for possible orientations\n           */\n        _this.ORIENTATIONS = {\n            PORTRAIT_PRIMARY: 'portrait-primary',\n            PORTRAIT_SECONDARY: 'portrait-secondary',\n            LANDSCAPE_PRIMARY: 'landscape-primary',\n            LANDSCAPE_SECONDARY: 'landscape-secondary',\n            PORTRAIT: 'portrait',\n            LANDSCAPE: 'landscape',\n            ANY: 'any'\n        };\n        return _this;\n    }\n    /**\n     * Listen to orientation change event\n     * @return {Observable<void>}\n     */\n    /**\n       * Listen to orientation change event\n       * @return {Observable<void>}\n       */\n    ScreenOrientation.prototype.onChange = /**\n       * Listen to orientation change event\n       * @return {Observable<void>}\n       */\n    function () {\n        return;\n    };\n    /**\n     * Lock the orientation to the passed value.\n     * See below for accepted values\n     * @param orientation {string} The orientation which should be locked. Accepted values see table above.\n     * @return {Promise<any>}\n     */\n    /**\n       * Lock the orientation to the passed value.\n       * See below for accepted values\n       * @param orientation {string} The orientation which should be locked. Accepted values see table above.\n       * @return {Promise<any>}\n       */\n    ScreenOrientation.prototype.lock = /**\n       * Lock the orientation to the passed value.\n       * See below for accepted values\n       * @param orientation {string} The orientation which should be locked. Accepted values see table above.\n       * @return {Promise<any>}\n       */\n    function (orientation) {\n        return;\n    };\n    /**\n     * Unlock and allow all orientations.\n     */\n    /**\n       * Unlock and allow all orientations.\n       */\n    ScreenOrientation.prototype.unlock = /**\n       * Unlock and allow all orientations.\n       */\n    function () { };\n    ScreenOrientation.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            eventObservable: true,\n            event: 'orientationchange'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", Observable)\n    ], ScreenOrientation.prototype, \"onChange\", null);\n    __decorate([\n        Cordova({ otherPromise: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], ScreenOrientation.prototype, \"lock\", null);\n    __decorate([\n        Cordova({ sync: true }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", []),\n        __metadata(\"design:returntype\", void 0)\n    ], ScreenOrientation.prototype, \"unlock\", null);\n    __decorate([\n        CordovaProperty,\n        __metadata(\"design:type\", String)\n    ], ScreenOrientation.prototype, \"type\", void 0);\n    /**\n     * @name Screen Orientation\n     * @description\n     * Cordova plugin to set/lock the screen orientation in a common way.\n     *\n     * Requires Cordova plugin: `cordova-plugin-screen-orientation`. For more info, please see the [Screen Orientation plugin docs](https://github.com/apache/cordova-plugin-screen-orientation).\n     *\n     * @usage\n     * ```typescript\n     * import { ScreenOrientation } from '@ionic-native/screen-orientation';\n     *\n     * constructor(private screenOrientation: ScreenOrientation) { }\n     *\n     * ...\n     *\n     *\n     * // get current\n     * console.log(this.screenOrientation.type); // logs the current orientation, example: 'landscape'\n     *\n     * // set to landscape\n     * this.screenOrientation.lock(this.screenOrientation.ORIENTATIONS.LANDSCAPE);\n     *\n     * // allow user rotate\n     * this.screenOrientation.unlock();\n     *\n     * // detect orientation changes\n     * this.screenOrientation.onChange().subscribe(\n     *    () => {\n     *        console.log(\"Orientation Changed\");\n     *    }\n     * );\n     *\n     * ```\n     *\n     * @advanced\n     *\n     * Accepted orientation values:\n     *\n     * | Value                         | Description                                                                  |\n     * |-------------------------------|------------------------------------------------------------------------------|\n     * | portrait-primary              | The orientation is in the primary portrait mode.                             |\n     * | portrait-secondary            | The orientation is in the secondary portrait mode.                           |\n     * | landscape-primary             | The orientation is in the primary landscape mode.                            |\n     * | landscape-secondary           | The orientation is in the secondary landscape mode.                          |\n     * | portrait                      | The orientation is either portrait-primary or portrait-secondary (sensor).   |\n     * | landscape                     | The orientation is either landscape-primary or landscape-secondary (sensor). |\n     *\n     */\n    ScreenOrientation = __decorate([\n        Plugin({\n            pluginName: 'ScreenOrientation',\n            plugin: 'cordova-plugin-screen-orientation',\n            pluginRef: 'screen.orientation',\n            repo: 'https://github.com/apache/cordova-plugin-screen-orientation',\n            platforms: ['Android', 'iOS', 'Windows']\n        })\n    ], ScreenOrientation);\n    return ScreenOrientation;\n}(IonicNativePlugin));\nexport { ScreenOrientation };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/screen-orientation/index.js\n// module id = 460\n// module chunks = 1 2 3","import { ViewController, AlertController, Popover } from 'ionic-angular';\r\nimport { NavParams } from 'ionic-angular';\r\nimport { CustomBootstrap } from './../../app/BootstrapFirstRun';\r\nimport { ApiProvider } from './../../providers/services';\r\nimport { CommonProvider } from '../../providers/common/common';\r\nimport { Component, NgZone, ViewChild } from '@angular/core';\r\nimport { NavController, IonicPage, Events, PopoverController, Platform } from 'ionic-angular';\r\nimport { ScreenOrientation } from '@ionic-native/screen-orientation';\r\nimport { Keyboard } from '@ionic-native/keyboard';\r\nimport { Tools } from './../../providers/tools';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Notification } from '../../providers/interface';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { combineLatest } from 'rxjs/observable/combineLatest';\r\nimport { PopUpPage } from '../include/pop-up/pop-up';\r\nimport { NativeAudio } from '@ionic-native/native-audio';\r\nimport { Vibration } from '@ionic-native/vibration';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { environment } from '../../environment/environment';\r\nimport * as moment from 'moment';\r\n\r\n\r\n@IonicPage({\r\n    name: 'page-grid',\r\n    priority: 'high'\r\n})\r\n@Component({\r\n    selector: 'page-grid',\r\n    templateUrl: 'grid.html',\r\n    providers: [DatePipe],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GridPage {\r\n\r\n    seatInfo: any;\r\n    mStatusH: number = 3;\r\n    mRatio: number = 1.58;\r\n    mRatioH: number = 1.35;\r\n    eW: number = 8;\r\n    eH: number = 8 / 1.42;\r\n    gWidth: number = 0;\r\n    public gridScaleRatio = 0.5;\r\n    gHeight: number = 0;\r\n    wWidth: number = window.screen.width;\r\n    wHeight: number = window.screen.height;\r\n    unit: string = 'vw';\r\n    gridunit = 'px';\r\n    isOriChanged: boolean = true;\r\n    fSeats: Array<any> = [];\r\n    mSeats: Array<any> = [];\r\n    bSeats: Array<any> = [];\r\n\r\n    public isFreeShowState: boolean = false;\r\n    isLoading: boolean = true;\r\n    hasGridData: boolean = true;\r\n    gridRes: any;\r\n    seatData: {\r\n        beach_id: string,\r\n        seat_number: string,\r\n        reservations: Array<string>,\r\n        // end_date: string,\r\n        // is_sunbed: boolean\r\n    } = {\r\n            beach_id: '',\r\n            seat_number: '',\r\n            reservations: []\r\n            // end_date: '',\r\n            // is_sunbed: false\r\n        }\r\n\r\n    isModal: boolean = false;\r\n    modalInstance: any;\r\n\r\n    modalState: any = {}; // modal popup\r\n\r\n    oldSeatNum: number = 0;\r\n    reserveId: string = '';\r\n    selReserveData: any = {};\r\n    selSeatAmount: number = 0;\r\n    selSeatType: string = '';\r\n\r\n    isModalLoading: boolean = false;\r\n\r\n    private onResumeSubscription: Subscription;\r\n\r\n    isPooling: boolean = true;\r\n\r\n    private _selectPeriodHandler: (data: any) => void;\r\n    private _sunbedModalHandler: () => void;\r\n\r\n    loading = true;\r\n    imgPath = environment.base + 'uploads/';\r\n    ratio = 1;\r\n    _grid: any;\r\n    grid_sides = ['front', 'middle', 'back'];\r\n    seat_configs = {\r\n        sides: {\r\n            left: ['a'],\r\n            right: ['b'],\r\n            center: ['m', 'n', 'o', 'x', 'y', 'z']\r\n        },\r\n        seats: {\r\n            a: 'left',\r\n            b: 'right',\r\n            m: 'center',\r\n            n: 'center',\r\n            o: 'center'\r\n        }\r\n    }\r\n    grid_start_date: any;\r\n    grid_end_date: any;\r\n    date_passed_alert = true;\r\n    localGrid: any;\r\n    refreshGridFlag = 0;\r\n    changePosNumber: any;\r\n    _PopUP: Popover;\r\n    gridId = Math.random();\r\n\r\n    constructor(\r\n        private alertCtrl: AlertController,\r\n        public navCtrl: NavController,\r\n        private changeDetectorRef: ChangeDetectorRef,\r\n        private ngZone: NgZone,\r\n        private tools: Tools,\r\n        public viewCtrl: ViewController,\r\n        public navParams: NavParams,\r\n        public platform: Platform,\r\n        public api: ApiProvider,\r\n        private common: CommonProvider,\r\n        public config: CustomBootstrap,\r\n        private orientation: ScreenOrientation,\r\n        private nativeAudio: NativeAudio,\r\n        private vibration: Vibration,\r\n        private events: Events,\r\n        public popoverCtrl: PopoverController,\r\n        private keyboard: Keyboard,\r\n        private dp: DatePipe\r\n    ) {\r\n\r\n        this.events.subscribe('Calendar', (_popover) => {\r\n            //debugger\r\n            this._PopUP = _popover;\r\n            localStorage.setItem('SetCalendar', \"true\");\r\n        })\r\n\r\n        let that = this;\r\n\r\n        // let alertInterval = setInterval(dpAlert, 100000);\r\n        this._grid = {\r\n            front: this.fSeats,\r\n            middle: this.mSeats,\r\n            back: this.bSeats\r\n        };\r\n\r\n        this.events.subscribe(\"grid:transaction\", (val) => {\r\n            // console.log(\"GRID RELOAD CALLED\");\r\n            this.isModalLoading = false;\r\n            this.reloadGrid(true);\r\n        });\r\n\r\n        console.error('GRID ID', this.gridId, 'IS CREATED');\r\n\r\n        this.events.subscribe('grid:singleItemUpdate', (p: any) => {\r\n\r\n            console.error('published.singleItemUpdate', this.gridId);\r\n            console.error('param', p);\r\n\r\n            this.config.getStorage('period').then((r: any) => {\r\n                const start_date = r.from;\r\n                const end_date = r.to;\r\n\r\n                const params = {\r\n                    start_date,\r\n                    end_date,\r\n                    sunbeds: false,\r\n                    index: p.seatIndex,\r\n                    seat_zone: p.seatZone,\r\n                    reservation_id: p.reservationId\r\n                }\r\n\r\n                this.config.getStorage('login').then(r => {\r\n                    console.log('grid.grid:singleItemUpdate');\r\n\r\n                    this.api.get(`grid/${r.beach_id}`, params, {\r\n                        'Content-Type': 'application/json'\r\n                    }, true, false).subscribe(data => {\r\n                        const fullClassList = ['u_2_2', 'u_2', 'b_2'];\r\n                        let li: any = data;\r\n\r\n                        li.protocol = { a: [], b: [] };\r\n                        li.discount = { a: [], b: [] };\r\n                        li.info = this.getGridInfoById(li);\r\n                        //Remove this fn later---->>>>>>>>\r\n                        // console.log(\"INFO FOR \" + li.i + \" = \", li.info, li);\r\n                        this.getColorInfo(li);\r\n                        li.img = this.getPosImg(li);\r\n                        li.style = this.getItemStyle(li);\r\n                        let cls = this.getStatusClass(li);\r\n                        li.status_class = cls;\r\n                        li.custom_status = Object.assign(li.status);\r\n                        li.isFull = (fullClassList.indexOf(cls) > -1) ? true : false;\r\n\r\n                        if (li.number == this.seatData.seat_number) {\r\n                            this.events.publish('grid:seatItemUpdated', li);\r\n                        }\r\n\r\n                        this.gridPartialUpdate(li);\r\n                    });\r\n                });\r\n            });\r\n\r\n\r\n        });\r\n\r\n        this.events.subscribe(\"grid:updateItem\", (itemInfo) => {\r\n\r\n            this.onGridItemUpdate(itemInfo);\r\n        });\r\n        this.events.subscribe(\"grid:reloadGrid\", (params: any) => {\r\n\r\n            if (params) {\r\n                this.onGridReload(params);\r\n            } else {\r\n                this.reloadGrid();\r\n            }\r\n\r\n        });\r\n\r\n\r\n        platform.ready().then(() => {\r\n            this.ngZone = new NgZone({\r\n                enableLongStackTrace: false\r\n            });\r\n\r\n            this.isModal = this.navParams.get(`isModal`);\r\n            let changePosData = this.navParams.get(`rData`);\r\n\r\n            if (changePosData) {\r\n                this.changePosNumber = changePosData.seat.number;\r\n            }\r\n\r\n            this.isFreeShowState = this.isModal;\r\n            this.selReserveData = this.navParams.get(`rData`);\r\n\r\n            if (typeof this.selReserveData != 'undefined' || this.selReserveData != null) {\r\n\r\n                this.oldSeatNum = this.selReserveData['seat']['number'];\r\n                this.reserveId = this.selReserveData['id'];\r\n                this.selSeatType = this.selReserveData.seat.type;\r\n\r\n                if (this.selSeatType == 'baldaquin') {\r\n                    this.selSeatAmount = 1;\r\n                } else {\r\n                    let count = 0;\r\n                    let seatList = Object.keys(this.selReserveData.seat.slots);\r\n                    seatList.map((side) => {\r\n                        count += this.selReserveData.seat.slots[side].length;\r\n                    })\r\n                    this.selSeatAmount = count + this.selReserveData.seat.extra_seats;\r\n                }\r\n\r\n            }\r\n\r\n            if (platform.is('cordova')) {\r\n                try {\r\n                    this.orientation.lock(this.orientation.ORIENTATIONS.LANDSCAPE);\r\n                } catch (error) {\r\n                }\r\n\r\n                this.nativeAudio.preloadSimple('notification', 'assets/notification.mp3').then(() => {\r\n\r\n                }).catch(error => {\r\n                    console.error(error);\r\n                });\r\n\r\n                this.onResumeSubscription = platform.resume.subscribe(() => {\r\n                    this.isPooling = false;\r\n                    this.initLoad();\r\n                });\r\n\r\n            }\r\n\r\n        });\r\n        // let beach_grid = JSON.parse(localStorage.beach_grid);\r\n        // let grid_setting = JSON.parse(localStorage.grid_setting);\r\n        // this.processGrid(beach_grid, grid_setting);\r\n        // this.refreshView();\r\n        // this.hasGridData = true;\r\n\r\n        // console.log(\"localstorage\",localStorage.beach_grid);\r\n    }\r\n    receivedNotification() {\r\n        this.nativeAudio.play('notification').then((value) => {\r\n\r\n        }).catch(error => {\r\n            console.error(error);\r\n        });\r\n        this.vibration.vibrate(1000);\r\n    }\r\n\r\n    ionViewDidLoad() {\r\n        this.initLoad();\r\n    }\r\n\r\n    ionViewWillUnload() {\r\n        console.error('grid.ionViewWillUnload', this.gridId);\r\n        // this.events.unsubscribe('grid:singleItemUpdate');\r\n    }\r\n\r\n    onGridItemUpdate(itemInfo) {\r\n        let that = this;\r\n        let refreshGridFlag = Math.random();\r\n\r\n        localStorage.refreshGridFlag = refreshGridFlag;\r\n        setTimeout(() => {\r\n            if (localStorage.refreshGridFlag == refreshGridFlag) {\r\n                that.gridItemUpdate(itemInfo);\r\n            } else {\r\n\r\n            }\r\n        }, 10);\r\n    }\r\n\r\n    onGridReload(params) {\r\n        console.log('grid.onGridReload');\r\n\r\n        let that = this;\r\n        let refreshGridFlag = Math.random();\r\n        this.refreshGridFlag = refreshGridFlag;\r\n        localStorage.refreshGridFlag = refreshGridFlag;\r\n        setTimeout(() => {\r\n            if (localStorage.refreshGridFlag == refreshGridFlag) {\r\n                that.loadingGridData(params.start_date, params.end_date);\r\n\r\n            } else {\r\n\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    dpAlert() {\r\n        if (!this.date_passed_alert) {\r\n            return true;\r\n        }\r\n        // Date Passed Alert\r\n        let msg = this.config.translate.translate.instant('Messages.DATE_PASSED_ALERT');\r\n        let dpAlertbox = this.alertCtrl.create({\r\n            title: msg,\r\n            buttons: [{\r\n                text: 'Ok',\r\n                handler: () => {\r\n\r\n                    try {\r\n                        this.grid_start_date = this.dp.transform(new Date(), 'yyyy-MM-dd');\r\n                        this.grid_end_date = this.dp.transform(new Date(), 'yyyy-MM-dd');\r\n\r\n                        let selDate = {\r\n                            from: this.grid_start_date,\r\n                            to: this.grid_end_date,\r\n                            period: this.tools.getPeriod(this.grid_start_date, this.grid_end_date),\r\n                            isToday: this.tools.getToday() == this.grid_start_date ? true : false\r\n                        };\r\n\r\n                        this.config.setStorage('period', selDate);\r\n                        this.loadingGridData(this.grid_start_date, this.grid_end_date, true)\r\n\r\n                        let calenderSet = localStorage.getItem('SetCalendar');\r\n                        //modal close\r\n                        if (this._PopUP && !calenderSet) {\r\n                            // this.modalState = undefined;\r\n                            // this.modalInstance = undefined;\r\n                            // this.isModalLoading = false;\r\n                            this._PopUP.dismiss();\r\n                            this._PopUP = undefined;\r\n                        } else {\r\n                            // selDate.isToday = true;\r\n                            // let options = {\r\n                            //     pickMode: 'range',\r\n                            //     from: selDate.from,\r\n                            //     to: selDate.to,\r\n                            //     defaultDateRange: selDate\r\n                            // };\r\n                            // this.events.publish('Calendar', false);\r\n                            let date = moment().add(0, 'days').format('Y-MM-DD');\r\n\r\n                            const _selDate = {\r\n                                from: date,\r\n                                to: date,\r\n                                period: 0,\r\n                                isToday: false\r\n                            }\r\n\r\n\r\n                            this.config.setStorage('period', _selDate);\r\n\r\n\r\n                            this._PopUP.dismiss()\r\n                        }\r\n                        localStorage.removeItem('SetCalendar');\r\n\r\n                    }\r\n                    catch (err) { }\r\n                    let navTransition = dpAlertbox.dismiss();\r\n                    return false;\r\n                }\r\n            }]\r\n        });\r\n\r\n        let start = this.grid_start_date;\r\n        if (start) {\r\n            let today = this.dp.transform(new Date(), 'yyyy-MM-dd');\r\n            if (today > start) {\r\n                dpAlertbox.present();\r\n                this.date_passed_alert = false;\r\n                return false;\r\n            }\r\n\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    getGridInfo(zone, pos) {\r\n        try {\r\n            const grid = JSON.parse(localStorage.beach_grid);\r\n            let li = grid[zone][pos];\r\n            if (li.info.mapElement.list && li.info.mapElement.list[0]) {\r\n                li.info.mapElement.list = { center: [li.info.mapElement.list[0]] };\r\n            }\r\n            let info = li.info;\r\n            let list = info.mapElement.list;\r\n            if (list && list[0]) {\r\n                info.mapElement.list = { center: [list[0]] };\r\n            }\r\n            return info || null;\r\n        } catch (e) {\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getGridInfoById(item) {\r\n        try {\r\n            let info;\r\n            const grid = JSON.parse(localStorage.beach_grid);\r\n            Object.keys(grid).map((zone) => {\r\n                let list = grid[zone];\r\n                list.filter((li) => {\r\n                    if (li.i == item.i) {\r\n                        if (li.info.mapElement.list && li.info.mapElement.list[0]) {\r\n                            li.info.mapElement.list = { center: [li.info.mapElement.list[0]] };\r\n                        }\r\n                        info = li.info;\r\n                    }\r\n                });\r\n\r\n                // list.map((li) => {\r\n                //     if (li.i == item.i) {\r\n                //         if (li.info.mapElement.list && li.info.mapElement.list[0]) {\r\n                //             li.info.mapElement.list = { center: [li.info.mapElement.list[0]] };\r\n                //         }\r\n                //         info = li.info;\r\n                //     }\r\n                // });\r\n            });\r\n            return info || null;\r\n        } catch (e) {\r\n\r\n            return null;\r\n        }\r\n    }\r\n\r\n    getItemInfo(item) {\r\n        let status = false;\r\n        try {\r\n            const grid = JSON.parse(localStorage.beach_grid);\r\n            Object.keys(grid).map((zone) => {\r\n                let list = grid[zone];\r\n                if (list && list.length) {\r\n                    list.map((li) => {\r\n                        if (li.i == item.i) {\r\n                            if (li.info.mapElement.list && li.info.mapElement.list[0]) {\r\n                                li.info.mapElement.list = { center: [li.info.mapElement.list[0]] };\r\n                            }\r\n                            item.info = li.info;\r\n                            status = true;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            let list = item.info.mapElement.list;\r\n            if (list && list[0]) {\r\n                item.info.mapElement.list = { center: [list[0]] };\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n        return status;\r\n    }\r\n\r\n    getColorInfo(item) {\r\n        if (item.type == 'static') {\r\n            return item;\r\n        }\r\n        const getColorDetail = function (li, side) {\r\n\r\n        };\r\n        let seat_configs = this.seat_configs;\r\n        try {\r\n\r\n            let list = item.info.mapElement.list;\r\n            if (list[0]) {\r\n                console.log('item changed');\r\n                list = { center: [list[0]] };\r\n                item.info.mapElement.list = list;\r\n            }\r\n            let sides = Object.keys(list);\r\n\r\n            for (let i = 0; i < sides.length; i++) {\r\n                let side = sides[i];\r\n                if (list[side] && list[side].length) {\r\n                    for (let j = 0; j < list[side].length; j++) {\r\n                        let li = list[side][j];\r\n                        let status_list = [],\r\n                            status_types = seat_configs['sides'][side];\r\n                        for (let k = 0; k < status_types.length; k++) {\r\n                            let status_type = status_types[k];\r\n                            if (item.status_color[status_type] && item.status_color[status_type][j]) {\r\n                                status_list = status_list.concat(item.status_color[status_type][j]);\r\n                            }\r\n                        }\r\n                        li['status_color'] = status_list;\r\n                        if (!li.status_color) {\r\n\r\n                        }\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n        return item;\r\n    }\r\n\r\n    gridPartialUpdate(res) {\r\n        const gridData = {\r\n            fSeats: this.fSeats,\r\n            mSeats: this.mSeats,\r\n            bSeats: this.bSeats\r\n        },\r\n            seatNo = res.number,\r\n            keys = Object.keys(gridData);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            const key = keys[i], list = gridData[key];\r\n            for (let j = 0; j < list.length; j++) {\r\n                let li = list[j];\r\n                if (li.number === seatNo) {\r\n                    list[j] = Object.assign(list[j], res);\r\n                    // li.info = this.getGridInfo(zone, j);\r\n                    // this.changeDetectorRef.markForCheck();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    gridItemUpdate(itemInfo) {\r\n        this._grid = {\r\n            front: this.fSeats,\r\n            middle: this.mSeats,\r\n            back: this.bSeats\r\n        };\r\n    }\r\n\r\n    initLoad() {\r\n        console.log('INIT LOAD');\r\n\r\n        this.config.getStorage('period').then((r: any) => {\r\n            if (r != null) {\r\n\r\n                if (this.isModal) {\r\n\r\n                    // Get period from reservation instead of calendar\r\n                    let start = this.selReserveData.period[0].date,\r\n                        end = this.selReserveData.period[this.selReserveData.period.length - 1].date;\r\n\r\n                    this.loadingGridData(start, end, true, this.selReserveData.released_days_original);\r\n\r\n                } else {\r\n                    this.loadingGridData(r.from, r.to, true);\r\n                }\r\n\r\n            } else {\r\n\r\n                this.config.getStorage('beach_settings').then((r: any) => {\r\n\r\n                    const working_date_start = `${(new Date().getFullYear())}-${r.working_dates[0].start['month']}-${r.working_dates[0].start['day']}`;\r\n                    const working_date_end = `${(new Date().getFullYear())}-${r.working_dates[0].end['month']}-${r.working_dates[0].end['day']}`;\r\n\r\n                    const selDate = {\r\n                        from: working_date_start,\r\n                        to: working_date_end,\r\n                        period: this.tools.getPeriod(working_date_start, working_date_end),\r\n                        isToday: this.tools.getToday() == working_date_start ? true : false\r\n                    };\r\n\r\n                    if ((new Date(this.tools.getToday())).getTime() <= (new Date(selDate.from)).getTime()) {\r\n                        selDate.to = selDate.from;\r\n                    } else {\r\n                        selDate.from = this.tools.getToday();\r\n                        selDate.to = this.tools.getToday();\r\n                    }\r\n\r\n                    this.config.setStorage('period', selDate);\r\n                    this.loadingGridData(selDate.from, selDate.to, true);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    ionViewDidEnter() {\r\n\r\n        if (this.platform.is('android') || this.platform.is('ios')) {\r\n            // this.keyboard.disableScroll(true);\r\n        }\r\n        this.initEvents();\r\n    }\r\n\r\n    ionViewDidLeave() {\r\n        if (this.platform.is('android') || this.platform.is('ios')) {\r\n            // this.keyboard.disableScroll(false);\r\n        }\r\n        this.events.unsubscribe('app:selectPeriod');\r\n        this.events.unsubscribe('app:reserveSunbed');\r\n        // this.events.unsubscribe('app:showFree');\r\n        this.events.unsubscribe('app:reload');\r\n\r\n        this.events.unsubscribe('app:gridUpdate');\r\n    }\r\n\r\n    ionViewWillEnter() {\r\n        this.config.setPage('grid');\r\n\r\n    }\r\n\r\n    onNewNotification(data: Notification) {\r\n        this.ngZone.run(() => {\r\n            if (data) {\r\n                // console.log('Notification Data:', data);\r\n\r\n                if (this.platform.is('cordova') && data.action === 'create') {\r\n                    this.receivedNotification();\r\n                }\r\n                if (this.platform.is('cordova') && data.action === 'cancel') {\r\n                    this.receivedNotification();\r\n                }\r\n                if (this.platform.is('cordova') && data.action === 'release') {\r\n                    this.receivedNotification();\r\n                }\r\n                this.reloadGrid();\r\n            }\r\n        })\r\n    }\r\n\r\n    changedFreeShowState(status) {\r\n        this.isFreeShowState = status;\r\n        this.selSeatType = 'free';\r\n        this.dumpElement.nativeElement.click();\r\n        this.refreshView();\r\n    }\r\n\r\n    dump = false;\r\n    @ViewChild('dump') dumpElement;\r\n    toggleDump() {\r\n\r\n        this.dump = !this.dump;\r\n    }\r\n    initEvents() {\r\n        this.events.subscribe('app:showFree', this.changedFreeShowState.bind(this));\r\n\r\n        this.events.subscribe('app:reserveSunbed', () => {\r\n            this.reloadGrid(true);\r\n        });\r\n\r\n        this.events.subscribe('app:reload', () => {\r\n            this.reloadGrid();\r\n        });\r\n        this.events.subscribe('app:gridUpdate', this.gridPartialUpdate.bind(this));\r\n\r\n        this._sunbedModalHandler = () => this.openSunbedsModal();\r\n        this.events.subscribe('app:presentSunbedModal', this._sunbedModalHandler);\r\n\r\n        this.events.publish('app:authState', false);\r\n\r\n        // console.log(\"123456 - grid  - unsubscribe\");\r\n        this.events.unsubscribe('app:notification');\r\n        // console.log(\"123456 - grid subscribe\");\r\n        this.events.subscribe('app:notification', ((data: Notification) => this.onNewNotification(data)));\r\n\r\n        this._selectPeriodHandler = (data) => this.selectPeriodHandler(data);\r\n        this.events.subscribe('app:selectPeriodMap', this._selectPeriodHandler);\r\n\r\n        this.events.publish('app:activePage', 'grid');\r\n\r\n    }\r\n\r\n    selectPeriodHandler(data: any) {\r\n        console.log('selectPeriodHandler');\r\n\r\n        let dateObj = data.period;\r\n        let pageNum = data.page;\r\n\r\n        if (pageNum != 1) return;\r\n\r\n        this.loadingGridData(dateObj.from, dateObj.to, true);\r\n        this.poolingGrid();\r\n\r\n    }\r\n\r\n    // Pooling grid\r\n\r\n    reloadGrid(loading?: boolean) {\r\n        console.error('realod.grid');\r\n        this.loading = true;\r\n        this.config.getStorage('period').then((r: any) => {\r\n            this.loadingGridData(r.from, r.to, loading ? loading : false);\r\n            this.events.publish('app:reloadGrid', r);\r\n        });\r\n    }\r\n\r\n    poolingGrid() {\r\n        if (!this.isPooling) return;\r\n\r\n        setTimeout(() => {\r\n            this.config.getStorage('period').then((r: any) => {\r\n                this.poolingGrid();\r\n            });\r\n        }, 50);\r\n    }\r\n\r\n    getJson(sunbed) {\r\n        return JSON.stringify(sunbed || {});\r\n    }\r\n\r\n    //Grid Functions\r\n    getPosImg(item) {\r\n        let img = this.imgPath + this.seatData.beach_id + '/elements/';\r\n        if (item.type == 'static') {\r\n            img = item.image;\r\n        } else {\r\n            img += item.image;\r\n        }\r\n        item.img = img;\r\n        return img;\r\n    }\r\n\r\n    getSizeByRatio(params) {\r\n        let { width, height, seatGridWidth } = params;\r\n        let ratio = this.gridScaleRatio * 100;\r\n        width = width * 100 / ratio;\r\n        height = height * 100 / ratio;\r\n        if (seatGridWidth) {\r\n            seatGridWidth = seatGridWidth * 100 / ratio;\r\n        }\r\n        return {\r\n            width, height, seatGridWidth\r\n        };\r\n    }\r\n\r\n    getItemStyle(item: any) {\r\n        const seatGridCenterWidths = {\r\n            \"1\": 0.6153846153846154,\r\n            \"2\": 0.6185899269599711,\r\n            \"4\": 0.575989194913353\r\n        };\r\n        let ratio = 0.13; this.ratio;\r\n        let gridunit = 'vw'; this.gridunit;\r\n        let style: any = {};\r\n        const seatImgWidths = {\r\n            /*\r\n             \"u/11+11.png\": 0.9314047775586237,\r\n             \"u/1_4.png\": 0.5564081163790396,\r\n             \"u/1_3.png\": 0.947940947940948,\r\n             \"u/1+1.png\": 0.5833333333333334,\r\n             \"u/11+111.png\": 0.9379768422942285,\r\n             \"u/111+11.png\": 0.9424647697693205,\r\n             \"u/11+1.png\": 0.8320512820512821,\r\n             \"u/1+11.png\": 0.8333333333333334\r\n             */\r\n        };\r\n        try {\r\n            let coord = item.coords;\r\n            if (!(item.info && item.info.mapElement)) {\r\n                this.getItemInfo(item);\r\n            }\r\n            let width = item.info.mapElement.size.width,\r\n                height = item.info.mapElement.size.height;\r\n\r\n            let img = item.image || '',\r\n                imgSplit = img.split(\"/\"),\r\n                imgIndex = item.type.substr(0, 1) + \"/\" + imgSplit[imgSplit.length - 1];\r\n            if (seatImgWidths[imgIndex]) {\r\n                width *= seatImgWidths[imgIndex];\r\n            }\r\n\r\n\r\n            /* if (item.type == 'umbrella') {\r\n \r\n                 let seatWidths = {\r\n \r\n                     \"3\": 0.9851380010908707,\r\n                 }\r\n \r\n \r\n                 if (item.sides > 1 && item.info.mapElement.widthPercentage !== 100) {\r\n                     let sgv = item.info.mapElement.seatGridWidth * 1 / this.gridScaleRatio;\r\n                     width *= (sgv > 100) ? (100 / sgv) : (sgv / 100);\r\n                    \r\n                 } else if (item.sides == 1) {\r\n                     width *= seatGridCenterWidths[item.seats];\r\n                    \r\n                 }\r\n                 let seatCount = item.info.mapElement.seatCount;\r\n                 if (seatWidths[seatCount]) {\r\n                     console.log(\"CHANGED WIDTH FOR \"+item.number+\"; \",width, seatWidths[seatCount], item);\r\n                     width *= seatWidths[seatCount];\r\n                 } else {\r\n                     console.log(\"ITEM\", item);\r\n                 }\r\n             }\r\n             if (typeof (item.info.mapElement.widthPercentage) !== 'undefined') {\r\n                 //  width *= item.info.mapElement.widthPercentage / 100;\r\n             } */\r\n\r\n            let color = 'transparent';\r\n            if (item.waiter && item.waiter.color) {\r\n                color = item.waiter.color;\r\n            }\r\n            style = {\r\n                'left': `${coord.x * ratio}${gridunit}`,\r\n                'top': `${coord.y * ratio}${gridunit}`,\r\n                'width': `${width * ratio}${gridunit}`,\r\n                'height': `${height * ratio}${gridunit}`,\r\n                'background': 'radial-gradient(transparent 60%, ' + color + ')'\r\n            }\r\n            let styleSunbedDiv = {\r\n                height: \"calc(\" + style.height + \" - 1.5vw)\"\r\n\r\n            };\r\n            item.styleSunbedDiv = styleSunbedDiv;\r\n            style.sunbedWidth = \"calc(\" + style.width + \"/7)\";\r\n            style.sunbedMinWidth = \"calc(1.312857vw)\";\r\n            if (item.type == 'static') {\r\n                style.display = 'none';\r\n            }\r\n            item.style = style;\r\n        } catch (e) {\r\n\r\n        }\r\n        return style;\r\n    }\r\n\r\n    getStatusClass(li) {\r\n        let type = li.type,\r\n            cls = type.substr(0, 1),\r\n            getStatus = function (list) {\r\n                let no = 1;\r\n                for (let i = 0; i < list.length; i++) {\r\n                    if (list[i] == 'booked' || list[i] == 'pending') {\r\n                        no = 2;\r\n                        break;\r\n                    }\r\n                }\r\n                return '_' + no;\r\n            };\r\n        if (type == 'static' || !li.status) {\r\n            return 's_0';\r\n        }\r\n        let keys = Object.keys(li.status);\r\n\r\n        for (let i = 0; i < keys.length; i++) {\r\n            let side = keys[i];\r\n            cls += getStatus(li.status[side]);\r\n        }\r\n        return cls;\r\n\r\n    }\r\n\r\n    addCustomStatus(seat) {\r\n        let custom = {},\r\n            statusList = seat.status || [];\r\n        for (let i = 0; i < statusList.length; i++) {\r\n            let status = statusList[i],\r\n                sides = Object.keys(status);\r\n            for (let j = 0; j < sides.length; j++) {\r\n                let side = sides[j];\r\n                if (!custom[side]) {\r\n                    custom[side] = [];\r\n                }\r\n            }\r\n        }\r\n        seat.custom_status = custom;\r\n    }\r\n\r\n    isValidSideList(data, side) {\r\n        let restored = false;\r\n        /* if (!(data.list && data.list[side] && data.list[side].length)) {\r\n             this.getItemInfo(data.item);\r\n             restored = true;\r\n         }*/\r\n        if (data.list && data.list[side] && data.list[side].length) {\r\n            return true;\r\n        } else {\r\n\r\n            let num = data.item.number;\r\n            if (restored) {\r\n\r\n            }\r\n\r\n            if (num > 6 && num < 11) {\r\n\r\n                try {\r\n                    const grid = JSON.parse(localStorage.beach_grid);\r\n                    Object.keys(grid).map((zone) => {\r\n                        let list = grid[zone];\r\n                        if (list && list.length) {\r\n                            list.map((li) => {\r\n                                if (li.i == data.item.i) {\r\n                                    if (li.info.mapElement.list && li.info.mapElement.list[0]) {\r\n                                        li.info.mapElement.list = { center: [li.info.mapElement.list[0]] };\r\n                                    }\r\n                                    data.item.info = li.info;\r\n                                    restored = true;\r\n\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                } catch (e) {\r\n\r\n                }\r\n\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private refreshTimer = null;\r\n\r\n    refreshView() {\r\n        if (this.refreshTimer) {\r\n            return;\r\n        }\r\n\r\n        this.refreshTimer = setTimeout(() => {\r\n            let that = this;\r\n            let refresh_grid: any = 'Refresh:' + new Date().getTime();\r\n            localStorage.setItem('refresh_grid', refresh_grid);\r\n\r\n            if (localStorage.getItem('refresh_grid') == refresh_grid) {\r\n                try {\r\n                    that.changeDetectorRef.markForCheck();\r\n                    that.changeDetectorRef.detectChanges();\r\n                } catch (e) {\r\n                }\r\n\r\n            } else {\r\n\r\n            }\r\n\r\n            this.refreshTimer = null;\r\n        }, 50);\r\n    }\r\n\r\n    // refreshView() {\r\n    //     let that = this;\r\n    //     let refresh_grid: any = 'Refresh:' + new Date().getTime();\r\n    //     localStorage.setItem('refresh_grid', refresh_grid);\r\n\r\n    //     setTimeout(() => {\r\n    //         if (localStorage.getItem('refresh_grid') == refresh_grid) {\r\n    //             try {\r\n    //                 that.changeDetectorRef.markForCheck();\r\n    //                 that.changeDetectorRef.detectChanges();\r\n    //             } catch (e) {\r\n    //             }\r\n\r\n    //         } else {\r\n\r\n    //         }\r\n    //     }, 500);\r\n    // }\r\n\r\n    markForCheck() {\r\n        try {\r\n            this.changeDetectorRef.markForCheck();\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }\r\n\r\n    checkCollision() {\r\n        const grid = {\r\n            front: this.fSeats,\r\n            middle: this.mSeats,\r\n            back: this.bSeats\r\n        },\r\n            getNum = function (str) {\r\n                return parseFloat(str.replace(this.gridunit, ''));\r\n            }.bind(this),\r\n            getStyle = function (item) {\r\n                let style = item.style,\r\n                    left = getNum(style.left),\r\n                    top = getNum(style.top),\r\n                    width = getNum(style.width),\r\n                    height = getNum(style.height);\r\n                return { left, top, width, height };\r\n            }.bind(this),\r\n            checkPoints = function (style, point) {\r\n                if (point > style.left && point > style.top && point < style.left + style.width && point < style.top + style.height) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }.bind(this),\r\n            isCollide = function (style1, style2) {\r\n                let style = Object.assign({}, { style1, style2 });\r\n                let colide = false;\r\n                if (checkPoints(style1, style2.top)) {\r\n                    style2.top = style1.top + style1.height;\r\n                    colide = true;\r\n                }\r\n                if (checkPoints(style1, style2.left)) {\r\n                    style2.left = style1.left + style1.width;\r\n                    colide = true;\r\n                }\r\n                if (checkPoints(style1, style2.top + style2.height)) {\r\n                    style2.height = style1.top - style2.top;\r\n                    colide = true;\r\n                }\r\n                if (checkPoints(style1, style2.left + style2.width)) {\r\n                    style2.width = style1.left - style2.left;\r\n                    colide = true;\r\n                }\r\n                if (colide) {\r\n                    console.log(\"COLIDE \", style, style1, style2);\r\n                }\r\n                return style2;\r\n            }.bind(this),\r\n            checkItem = function (li) {\r\n                let style = getStyle(li);\r\n                Object.keys(grid).map(side => {\r\n                    let list = grid[side];\r\n                    list.map((item) => {\r\n                        if (li.index !== item.index && li.style && item.style) {\r\n                            let style2 = getStyle(item);\r\n                            style2 = isCollide(style, style2);\r\n                            item.style.top = style2.top + this.gridunit;\r\n                            item.style.left = style2.left + this.gridunit;\r\n                            item.style.width = style2.width + this.gridunit;\r\n                            item.style.height = style2.height + this.gridunit;\r\n                        }\r\n\r\n                    });\r\n                });\r\n            }.bind(this);\r\n        Object.keys(grid).map(side => {\r\n            let list = grid[side];\r\n            list.map((li) => {\r\n                checkItem(li);\r\n            });\r\n        });\r\n    }\r\n\r\n    processGrid(seats, size) {\r\n        try {\r\n            let zones = Object.keys(seats);\r\n\r\n            const fullClassList = ['u_2_2', 'u_2', 'b_2'];\r\n            const grid = JSON.parse(localStorage.beach_grid);\r\n\r\n            for (let i = 0; i < zones.length; i++) {\r\n                let zone = zones[i],\r\n                    list = seats[zone];\r\n\r\n                list.forEach(li => {\r\n                    li.protocol = { a: [], b: [] };\r\n                    li.discount = { a: [], b: [] };\r\n\r\n                    let info;\r\n                    grid[zone].filter(lst => {\r\n                        if (lst.i == li.i) {\r\n                            if (lst.info.mapElement.list && lst.info.mapElement.list[0]) {\r\n                                lst.info.mapElement.list = { center: [lst.info.mapElement.list[0]] };\r\n                            }\r\n                            info = lst.info;\r\n                        }\r\n                    });\r\n\r\n                    li.info = info || null;\r\n                    //Remove this fn later---->>>>>>>>\r\n                    // console.log(\"INFO FOR \" + li.i + \" = \", li.info, li);after\r\n                    // this.getColorInfo(li);\r\n\r\n                    li.img = this.getPosImg(li);\r\n\r\n                    const seatGridCenterWidths = {\r\n                        \"1\": 0.6153846153846154,\r\n                        \"2\": 0.6185899269599711,\r\n                        \"4\": 0.575989194913353\r\n                    };\r\n                    let ratio = 0.13; this.ratio;\r\n                    let gridunit = 'vw'; this.gridunit;\r\n                    let style: any = {};\r\n                    const seatImgWidths = {};\r\n                    try {\r\n                        let coord = li.coords;\r\n                        if (!(li.info && li.info.mapElement)) {\r\n                            try {\r\n                                if (grid[zone] && grid[zone].length) {\r\n                                    grid[zone].filter((lst) => {\r\n                                        if (lst.i == li.i) {\r\n                                            if (lst.info.mapElement.list && lst.info.mapElement.list[0]) {\r\n                                                lst.info.mapElement.list = { center: [lst.info.mapElement.list[0]] };\r\n                                            }\r\n                                            li.info = lst.info;\r\n                                        }\r\n                                    });\r\n                                }\r\n                                let lists = li.info.mapElement.list;\r\n                                if (lists && lists[0]) {\r\n                                    li.info.mapElement.list = { center: [lists[0]] };\r\n\r\n                                }\r\n\r\n                            } catch (e) {\r\n\r\n                            }\r\n                        }\r\n                        let width = li.info.mapElement.size.width,\r\n                            height = li.info.mapElement.size.height;\r\n\r\n                        let img = li.image || '',\r\n                            imgSplit = img.split(\"/\"),\r\n                            imgIndex = li.type.substr(0, 1) + \"/\" + imgSplit[imgSplit.length - 1];\r\n                        if (seatImgWidths[imgIndex]) {\r\n                            width *= seatImgWidths[imgIndex];\r\n                        }\r\n\r\n                        let color = 'transparent';\r\n                        if (li.waiter && li.waiter.color) {\r\n                            color = li.waiter.color;\r\n                        }\r\n                        style = {\r\n                            'left': `${coord.x * ratio}${gridunit}`,\r\n                            'top': `${coord.y * ratio}${gridunit}`,\r\n                            'width': `${width * ratio}${gridunit}`,\r\n                            'height': `${height * ratio}${gridunit}`,\r\n                            'background': 'radial-gradient(transparent 60%, ' + color + ')'\r\n                        }\r\n                        let styleSunbedDiv = {\r\n                            height: \"calc(\" + style.height + \" - 1.5vw)\"\r\n\r\n                        };\r\n                        li.styleSunbedDiv = styleSunbedDiv;\r\n                        style.sunbedWidth = \"calc(\" + style.width + \"/7)\";\r\n                        style.sunbedMinWidth = \"calc(1.312857vw)\";\r\n                        if (li.type == 'static') {\r\n                            style.display = 'none';\r\n                        }\r\n                        li.style = style;\r\n                    } catch (e) {\r\n\r\n                    }\r\n\r\n                    li.style = style;\r\n                    // li.style = this.getItemStyle(li);\r\n\r\n                    let type = li.type, cls = type.substr(0, 1);\r\n                    if (type == 'static' || !li.status) {\r\n                        cls = 's_0';\r\n                    } else {\r\n                        cls += '_1';\r\n                    }\r\n\r\n                    li.status_class = cls;\r\n                    li.custom_status = Object.assign(li.status);\r\n                    li.isFull = (fullClassList.indexOf(cls) > -1) ? true : false;\r\n                    if (li.number == this.seatData.seat_number) {\r\n                        this.events.publish('grid:seatItemUpdated', li);\r\n                    }\r\n\r\n                });\r\n                seats[zone] = list.filter((li) => {\r\n                    if (li && li.info) {\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                });\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        this.fSeats = JSON.parse(JSON.stringify(seats.front));\r\n        this.mSeats = JSON.parse(JSON.stringify(seats.middle));\r\n        this.bSeats = JSON.parse(JSON.stringify(seats.back));\r\n\r\n        this._grid = {\r\n            front: this.fSeats,\r\n            middle: this.mSeats,\r\n            back: this.bSeats\r\n        };\r\n\r\n        this.gWidth = JSON.parse(JSON.stringify(size.width));\r\n        this.gHeight = JSON.parse(JSON.stringify(size.height));\r\n        this.hasGridData = true;\r\n        // this.checkCollision();\r\n        this.markForCheck();\r\n    };\r\n\r\n    setStatusColor(data, sideName, liIndex, li) {\r\n        //this.getItemInfo(data.item);\r\n        let seat_configs = this.seat_configs;\r\n        let sideList = this.seat_configs.sides[sideName];\r\n\r\n        let status_colors = data.item.status_color;\r\n        let statuschk = data.item.status;\r\n        let status = data.item.status;\r\n\r\n        let statusList = [];\r\n\r\n        // if(!status_colors){\r\n        //     sideList = [\"a\",\"b\"];\r\n        // status_colors = statuschk;\r\n        // for (let i = 0; i < sideList.length; i++) {\r\n        //     let side = sideList[i];\r\n        //          status_colors[side] = [];\r\n\r\n        //     for(let m=0;m < data.item.status[side].length;m++){\r\n        //         status_colors[side].push(\"#ffffff\");\r\n        //      }\r\n\r\n        //     }\r\n        // }\r\n        if (!status_colors) {\r\n            status_colors = Object.assign({}, status);\r\n            for (let r = 0; r < sideList.length; r++) {\r\n                let side = sideList[r];\r\n                let sides = status_colors[side];\r\n                if (sides) {\r\n                    for (let m = 0; m < sides.length; m++) {\r\n                        sides[m] = \"#ffffff\";\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n        for (let i = 0; i < sideList.length; i++) {\r\n            let side = sideList[i];\r\n\r\n            let status_color = status_colors[side];\r\n\r\n            if (status_color && status_color.length) {\r\n                for (let j = 0; j < status_color.length; j++) {\r\n                    if (liIndex == j) {\r\n                        let color = status_color[j];\r\n\r\n                        if (color && color.length) {\r\n                            statusList = statusList.concat(color);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        if (!li.status_color) {\r\n            li.status_color = statusList;\r\n        }\r\n        if (data.item.number == 9 || data.item.number == 10) {\r\n\r\n        }\r\n        this.refreshView();\r\n        return 1;\r\n    }\r\n\r\n    setStatusColor1(data, li) {\r\n        let statusList = [];\r\n        try {\r\n\r\n            Object.keys(data.status_color).map((status_color) => {\r\n                if (data.status_color[status_color] && data.status_color[status_color].length) {\r\n                    let list = data.status_color[status_color];\r\n                    for (let i = 0; i < list.length; i++) {\r\n                        if (list[i]) {\r\n                            statusList = list[i];\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            });\r\n            li.status_color = [];\r\n\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n        this.refreshView();\r\n        return statusList.length;\r\n    }\r\n\r\n    logError(item) {\r\n        return 'invalid';\r\n    }\r\n\r\n    // GRid Functions End\r\n\r\n    /*loadGridCall(params) {\r\n        let that = this;\r\n        this.refreshGridFlag = true;\r\n        const loadGrid = function(){\r\n            if(this.refreshGridFlag) {\r\n                return;\r\n            }\r\n        }.bind(this);\r\n    }*/\r\n\r\n    loadingGridData(s_date?: any, e_date?: any, loading: boolean = false, excluded_days?: string[]) {\r\n\r\n        this.grid_start_date = s_date;\r\n        this.grid_end_date = e_date;\r\n        localStorage.grid_start_date = s_date;\r\n        localStorage.grid_end_date = e_date;\r\n        this.date_passed_alert = true;\r\n\r\n        let param = {\r\n            start_date: s_date,\r\n            end_date: e_date,\r\n            excluded_days: excluded_days || '',\r\n            sunbeds: false\r\n        }\r\n\r\n        this.isLoading = true;\r\n        this.loading = true;\r\n\r\n        this.config.getStorage('login').then(r => {\r\n            this.seatData.beach_id = r.beach_id;\r\n\r\n            console.log('grid.loadingGridData');\r\n            this.api.get(`grid/${r.beach_id}`, param, {\r\n                'Content-Type': 'application/json'\r\n            }, true, false).subscribe(data => {\r\n                this.gridRes = data;\r\n                this.config.setStorage(\"grid_details\", data);\r\n                if (data) {\r\n                    if (data.seats) {\r\n                        this.events.publish(\"app:showPercent\", data.seats);\r\n                        this.fSeats = [];\r\n                        this.mSeats = [];\r\n                        this.bSeats = [];\r\n\r\n                        this.ngZone.run(() => {\r\n\r\n                            this.processGrid(data.seats, data.size);\r\n                            this.events.publish('app:freeAmount', data.free_sunbeds);\r\n                            this.events.publish('app:notify', data.notifications);\r\n                            this.refreshView();\r\n                            setTimeout(() => {\r\n                                this.refreshView();\r\n                            }, 30);\r\n                        });\r\n\r\n                    } else {\r\n                        this.ngZone.run(() => {\r\n                            this.hasGridData = false;\r\n                        });\r\n                    }\r\n                } else {\r\n\r\n                    this.api.AmError(this.config.translate.translate.instant('Components.WARNING'), this.config.translate.translate.instant('Messages.CANT_SEARCH_PRE'), [{\r\n                        text: this.config.translate.translate.instant('Buttons.OK'),\r\n                        handler: () => { }\r\n                    }]);\r\n                }\r\n                this.isLoading = false;\r\n            }, err => {\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    getSeatStyle(coord: any, color): any {\r\n\r\n        let style = {\r\n            'left': `${this.getPosXOnPercentage(coord.x)}${this.unit}`,\r\n            'top': `${this.getPosYOnPercentage(coord.y)}${this.unit}`,\r\n            'background-color': color,\r\n        }\r\n        return style;\r\n    }\r\n\r\n    getSeatClass(item) {\r\n        return {\r\n            circle: item.type == 'baldaquin',\r\n            square: (item.type == 'umbrella' && item.seats == '2'),\r\n            rectangle: (item.type == 'umbrella' && item.seats == '4')\r\n        }\r\n    }\r\n\r\n    getStatusStyle(status: Array<any>, color): any {\r\n\r\n        let style = {\r\n            'height': `${this.mStatusH / status.length}${this.unit}`,\r\n            'background-color': color\r\n        }\r\n        return style;\r\n    }\r\n\r\n    getPosXOnPercentage(posPx: number) {\r\n        return posPx * (8 / 71) - this.eW;\r\n    }\r\n\r\n    getPosYOnPercentage(posPx: number) {\r\n        return posPx * (8 / 71) - this.eH;\r\n    }\r\n\r\n    // if seat have available sunbeds or baldaquin\r\n\r\n    getAvailableSeats(seat: any): {\r\n        status: boolean,\r\n        data: Array<number>\r\n    } {\r\n        if (seat.type == 'umbrella') {\r\n\r\n            if (!seat.can_seat) {\r\n                return {\r\n                    status: false,\r\n                    data: []\r\n                }\r\n            }\r\n\r\n            // let status: {\r\n            // \ta: Array < string > ,\r\n            // \tb: Array < string >\r\n            // } = seat.status;\r\n\r\n            let canSeat: string = seat.can_seat;\r\n\r\n            var ret: {\r\n                status: boolean,\r\n                data: Array<number>\r\n            } = {\r\n                status: false,\r\n                data: []\r\n            };\r\n\r\n            if (canSeat.length <= 2) {\r\n                // detecting in status\r\n                canSeat = `${canSeat}`;\r\n                ret.status = true;\r\n                if (canSeat.indexOf('A') > -1) { // available all seat in A side\r\n                    if (seat.seats == 2) {\r\n                        ret.data.push(0);\r\n                    } else {\r\n                        ret.data.push(0);\r\n                        ret.data.push(1);\r\n                    }\r\n                }\r\n                if (canSeat.indexOf('B') > -1) { // available all seat in B side\r\n                    if (seat.seats == 2) {\r\n                        ret.data.push(1);\r\n                    } else {\r\n                        ret.data.push(2);\r\n                        ret.data.push(3);\r\n                    }\r\n                }\r\n                return ret;\r\n            }\r\n\r\n        } else {\r\n            return {\r\n                status: seat.can_seat,\r\n                data: []\r\n            };\r\n        }\r\n    }\r\n\r\n    isFreeSeats(seat: any) {\r\n\r\n        const canSeat = typeof seat.can_seat === 'string' && seat.can_seat.length <= 2 ? true : seat.can_seat;\r\n\r\n        if (this.isModal) {\r\n\r\n            if (this.oldSeatNum === seat.number) {\r\n\r\n                return false; // disable\r\n\r\n            } else {\r\n\r\n                if (this.selSeatType === seat.type && canSeat) {\r\n\r\n                    return true; // enable\r\n\r\n                } else {\r\n\r\n                    return false;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            return seat.can_seat;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    showSeatDetail(seat: any, zone: string) {\r\n        this.seatInfo = seat;\r\n        if (this.isModalLoading) {\r\n            return\r\n        }\r\n        this.isModalLoading = true;\r\n\r\n        this.isPooling = false;\r\n        this.seatData.seat_number = seat.number;\r\n        this.seatData.reservations = seat.reservations;\r\n        seat['available_seat'] = this.getAvailableSeats(seat);\r\n        seat['zone'] = zone; // popup title (listing page)\r\n\r\n        let popUpData: {\r\n            kind: string,\r\n            data: Array<any>,\r\n            seatInfo: any,\r\n            isNew?: boolean,\r\n            canCreate: boolean,\r\n            setState: any\r\n        } = {\r\n            kind: seat.type,\r\n            data: [],\r\n            seatInfo: seat,\r\n            isNew: false,\r\n            canCreate: false,\r\n            setState: undefined\r\n        };\r\n\r\n        popUpData.setState = this.setModalState.bind(this);  // we will call parent method (setModalState) from within modal\r\n\r\n        try {\r\n            if (!this.isModal && seat.reservations.length == 0) {\r\n\r\n                popUpData.kind = seat.type;\r\n                popUpData.data = [];\r\n                popUpData.seatInfo = seat;\r\n                popUpData.isNew = true;\r\n                popUpData.canCreate = popUpData.kind == 'baldaquin' ? true : popUpData.canCreate;\r\n\r\n                let pop = this.popoverCtrl.create(`page-pop-up`, popUpData, {\r\n                    cssClass: 'SeatPopup',\r\n                    enableBackdropDismiss: false\r\n                });\r\n\r\n                this._PopUP = pop;\r\n\r\n                pop.onDidDismiss(data => {\r\n                    this.modalState = undefined;\r\n                    this.modalInstance = undefined;\r\n                    this.isModalLoading = false;\r\n                    this._PopUP = undefined;\r\n                    this.reloadGrid(true);\r\n                });\r\n\r\n\r\n                // this.ngZone.run(() => {\r\n                pop.present().then(() => {\r\n                    this.isModalLoading = false;\r\n                    this.modalInstance = pop.overlay['instance'] as PopUpPage;\r\n                });\r\n                // });\r\n\r\n                return;\r\n\r\n            }\r\n\r\n        } catch (e) {\r\n\r\n\r\n        }\r\n        if (this.seatData.reservations && this.seatData.reservations.length) {\r\n\r\n        }\r\n\r\n        this.api.post('seat/reservations', this.seatData, {\r\n            'Content-Type': 'application/json'\r\n        }, true, false).subscribe((res: any) => {\r\n            // console.log(\"debugger\");\r\n            // console.log(this.isModal);\r\n            if (this.isModal) {\r\n                // console.log(\"entering modal\");\r\n                this.performChangePos(seat);\r\n                this.isModalLoading = false;\r\n\r\n            } else {\r\n\r\n\r\n                // ----------------------------------------\r\n                // Modal data\r\n                // ----------------------------------------\r\n                const colorMap = { pending: '#ffff00', booked: '#a82fab', occupied: '#000000', paid: '#f40006', 'change-request': '#54fe62' };\r\n\r\n                res = res.map(item => {\r\n                    if (item) {\r\n                        item.status_color = item.payment_method === 'online' && item.status === 'booked' ? colorMap['paid'] : colorMap[item.status];\r\n                    }\r\n                    if (!item.status_color) {\r\n\r\n                    }\r\n                    return item;\r\n\r\n                });\r\n\r\n                popUpData.kind = seat.type;\r\n                popUpData.data = res;\r\n                popUpData.seatInfo = seat;\r\n                popUpData.isNew = false;\r\n\r\n                let pop = this.popoverCtrl.create(`page-pop-up`, popUpData, {\r\n                    cssClass: 'SeatPopup',\r\n                    enableBackdropDismiss: false\r\n                });\r\n\r\n                this._PopUP = pop;\r\n\r\n                pop.onDidDismiss(data => {\r\n                    this.modalState = undefined;\r\n                    this.modalInstance = undefined;\r\n                    this.isModalLoading = false;\r\n                    this._PopUP = undefined;\r\n                    this.reloadGrid(true);\r\n                });\r\n\r\n                pop.present().then(() => {\r\n                    this.isModalLoading = false;\r\n                    this.modalInstance = pop.overlay['instance'] as PopUpPage;\r\n                });\r\n\r\n            }\r\n\r\n        }, err => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    openSunbedsModal() {\r\n\r\n        this.config.getStorage('period').then(period => {\r\n            let beach_id = this.common.getStorageItem('beach_id');\r\n            this.getFreeSunbeds({ from: period.from, to: period.to, beach_id });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    async getFreeSunbeds(cfg: any) {\r\n\r\n        let param = {\r\n            start_date: cfg.from,\r\n            end_date: cfg.to,\r\n            sunbeds: true\r\n        }\r\n\r\n        console.log('grid.loadingGridData.getFreeSunbeds');\r\n        const gridRequest = this.api.get(`grid/${cfg.beach_id}`, param, { 'Content-Type': 'application/json' }, true, false);\r\n        const sunbedsRequest = this.api.get(`sunbeds/${cfg.beach_id}`, { start_date: cfg.from, end_date: cfg.to }, { 'Content-Type': 'application/json' }, true, false);\r\n\r\n        const combined = combineLatest(gridRequest, sunbedsRequest);\r\n\r\n        combined.subscribe(([grid, sunbeds]) => {\r\n\r\n            if (grid) {\r\n\r\n                if (sunbeds.length) {\r\n\r\n                    const colorMap = { booked: '#a82fab', occupied: '#000000', paid: '#f40006', 'change-request': '#54fe62' };\r\n\r\n                    sunbeds = sunbeds.map(item => {\r\n\r\n                        if (item) {\r\n                            item.status_color = item.payment_method === 'online' && item.status === 'booked' ? colorMap['paid'] : colorMap[item.status];\r\n                        }\r\n                        if (!item.status_color) {\r\n\r\n                        }\r\n\r\n                        return item;\r\n\r\n                    });\r\n\r\n                }\r\n\r\n                grid['reservations'] = sunbeds;\r\n\r\n                const openModal = grid.count > 0 && sunbeds.length || grid.count === 0 && sunbeds.length || grid.count > 0 && !sunbeds.length;\r\n\r\n                if (openModal) {\r\n\r\n                    const pop = this.popoverCtrl.create(`page-pop-up`, {\r\n                        kind: 'sunbed',\r\n                        freeSunbeds: grid,\r\n                        setState: this.setModalState.bind(this)  // we will call parent method (setModalState) from within modal\r\n                    }, {\r\n                            cssClass: 'SeatPopup',\r\n                            enableBackdropDismiss: false\r\n                        });\r\n\r\n                    pop.onDidDismiss(data => {\r\n\r\n                        this.modalState = undefined;\r\n                        this.modalInstance = undefined;\r\n\r\n                        this.reloadGrid(true);\r\n\r\n                    });\r\n\r\n                    pop.present().then(() => {\r\n                        this.modalInstance = pop.overlay['instance'] as PopUpPage;\r\n                    });\r\n\r\n                } else {\r\n\r\n                    this.api.AmError(this.config.translate.translate.instant('Components.WARNING'),\r\n                        this.config.translate.translate.instant('Messages.OPEN_SUNBEDS_MODAL'), [{\r\n                            text: this.config.translate.translate.instant('Buttons.OK'),\r\n                            handler: () => { }\r\n                        }]\r\n                    );\r\n\r\n                }\r\n\r\n            } else {\r\n\r\n                this.api.AmError(this.config.translate.translate.instant('Components.WARNING'),\r\n                    this.config.translate.translate.instant('Messages.CANT_SEARCH_PRE'), [{\r\n                        text: this.config.translate.translate.instant('Buttons.OK'),\r\n                        handler: () => { }\r\n                    }]\r\n                );\r\n\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    setModalState(data) {\r\n\r\n        if (data) {\r\n\r\n            this.modalState = data;\r\n\r\n        } else {\r\n\r\n            // Get fresh data for current seat (listing page)\r\n            if (this.modalState.reservation_id) {\r\n                delete this.modalState.reservation_id;\r\n            }\r\n\r\n            this.updateModal({ switchToListingPage: true });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    updateModal(data?: any) {\r\n\r\n\r\n        if (this.modalState && Object.keys(this.modalState).length) {\r\n\r\n            if (this.modalState.action && this.modalState.action !== '') {\r\n\r\n                if (this.modalState.action === 'reservation' || this.modalState.action === 'add') {\r\n\r\n                    if (this.modalState.kind !== 'sunbed') {\r\n\r\n                        this.reloadGridCustom().subscribe(seat => {\r\n\r\n                            seat.canSeat = this.getAvailableSeats(seat);\r\n\r\n                            if (data && data.switchToListingPage) {\r\n                                seat.switchToListingPage = true;\r\n                            }\r\n\r\n                            if (this.modalState.reservation_id && this.modalState.reservation_id !== '') {\r\n                                seat.reservation_id = this.modalState.reservation_id;\r\n                            }\r\n\r\n                            if (data.data && data.data.id !== '') {\r\n                                seat.updated_id = data.data.id;\r\n                            }\r\n\r\n                            this.modalInstance.emit(seat);\r\n\r\n                        });\r\n\r\n                    } else {\r\n\r\n                        if (data && data.switchToListingPage) {\r\n\r\n                            // Get listing page fresh data\r\n                            this.config.getStorage('period').then(period => {\r\n                                const reservationsSource = this.reloadGridCustom({ start: period.from, end: period.to });\r\n                                const sunbedsSource = this.refreshSunbedsCount();\r\n\r\n                                const source = combineLatest(reservationsSource, sunbedsSource);\r\n\r\n                                source.subscribe(([reservations, sunbeds]) => {\r\n\r\n                                    data.items = reservations;\r\n                                    data.count = sunbeds.count;\r\n                                    data.price = sunbeds.price;\r\n\r\n                                    this.modalInstance.emit(data);\r\n\r\n                                });\r\n\r\n                            });\r\n\r\n                        } else {\r\n\r\n                            this.refreshSunbedsCount().subscribe(sunbeds => {\r\n\r\n                                if (this.modalState.reservation_id && this.modalState.reservation_id !== '') {\r\n                                    sunbeds.reservation_id = this.modalState.reservation_id;\r\n                                }\r\n\r\n                                sunbeds.updated_id = data.data.id;\r\n                                sunbeds.action = data.data.action;\r\n\r\n                                if (data.data.action === 'update') {\r\n                                    sunbeds.new_count = data.data.sunbeds;\r\n                                }\r\n\r\n                                sunbeds.type = 'sunbed';\r\n                                this.modalInstance.emit(sunbeds);\r\n\r\n                            });\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    // this.config.getStorage('period').then(period => {\r\n\r\n                    // \tthis.reloadGridCustom({start: period.from, end: period.to}).subscribe(seat => {\r\n\r\n                    // \t\tif ( this.modalState.kind !== 'sunbed' ) {\r\n\r\n                    // \t\t\tseat.refreshListing = true;\r\n                    // \t\t\tthis.modalInstance.emit(seat);\r\n\r\n                    // \t\t} else {\r\n\r\n                    // \t\t\tdata = {\r\n                    // \t\t\t\titems: seat,\r\n                    // \t\t\t\trefreshListing: true\r\n                    // \t\t\t};\r\n\r\n                    // \t\t\tthis.modalInstance.emit(data);\r\n\r\n                    // \t\t}\r\n\r\n                    // \t});\r\n\r\n                    // });\r\n\r\n                    // Listing page\r\n                    this.config.getStorage('period').then(period => {\r\n\r\n                        const reservationsSource = this.reloadGridCustom({ start: period.from, end: period.to });\r\n                        const sunbedsSource = this.refreshSunbedsCount({ start: period.from, end: period.to });\r\n\r\n                        const source = combineLatest(reservationsSource, sunbedsSource);\r\n\r\n                        source.subscribe(([reservations, sunbeds]) => {\r\n\r\n                            if (this.modalState.kind !== 'sunbed') {\r\n\r\n                                reservations.refreshListing = true;\r\n                                this.modalInstance.emit(reservations);\r\n\r\n                            } else {\r\n\r\n                                data.items = reservations;\r\n                                data.count = sunbeds.count;\r\n                                data.price = sunbeds.price;\r\n\r\n                                data.refreshListing = true;\r\n\r\n                                this.modalInstance.emit(data);\r\n\r\n                            }\r\n\r\n                        });\r\n\r\n                    });\r\n\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            this.reloadGrid(true);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    reloadGridCustom(period?: any): Observable<any> {\r\n        let url,\r\n            beach_id = this.common.getStorageItem('beach_id');\r\n\r\n        let param: any = {\r\n            start_date: period ? period.start : this.grid_start_date || this.modalState.period.start,\r\n            end_date: period ? period.end : this.grid_end_date || this.modalState.period.end\r\n        };\r\n\r\n        try {\r\n            if (this.modalState.kind !== 'sunbed') {\r\n\r\n                console.log('grid.reloadGridCustom.grid');\r\n                url = `grid/${beach_id}`;\r\n\r\n                param.excluded_days = '';\r\n                param.reservation_id = '';\r\n                param.seat_x = this.seatInfo.coords.x;\r\n                param.seat_y = this.seatInfo.coords.y;\r\n                param.seat_zone = this.seatInfo.zone;\r\n                param.sunbeds = false;\r\n\r\n            } else {\r\n                url = `sunbeds/${beach_id}`;\r\n            }\r\n\r\n            if (this.modalState.reservation_id && this.modalState.reservation_id !== '') {\r\n                param.reservation_id = this.modalState.reservation_id;\r\n            }\r\n        } catch (e) {\r\n\r\n\r\n        }\r\n\r\n        return this.api.get(url, param, { 'Content-Type': 'application/json' }, true, false);\r\n\r\n    }\r\n\r\n    refreshSunbedsCount(period?: any): Observable<any> {\r\n        console.log('grid.refreshSunbedsCount.grid');\r\n        const beach_id = this.common.getStorageItem('beach_id');\r\n\r\n        console.log('grid.refreshSunbedsCount');\r\n        const url = `grid/${beach_id}`;\r\n\r\n        const param = {\r\n            start_date: period ? period.start : this.modalState.period.start,\r\n            end_date: period ? period.end : this.modalState.period.end,\r\n            sunbeds: true\r\n        };\r\n\r\n        return this.api.get(url, param, { 'Content-Type': 'application/json' }, true, false);\r\n\r\n    }\r\n\r\n    performChangePos(seat: any) {\r\n\r\n        // console.log(\"change position\");\r\n        this.viewClose();\r\n        // console.log(seat);\r\n        this.events.publish(`app:changePosition`, seat);\r\n    }\r\n\r\n    // When closing grid page...\r\n    viewClose() {\r\n        // console.log(\"close view\");\r\n        // console.log(this.viewCtrl);\r\n\r\n        this.viewCtrl.dismiss({\r\n            data: \"Ok Grid Page Closed!!!\"\r\n        });\r\n    }\r\n\r\n    ionViewWillLeave(): void {\r\n        if (this.onResumeSubscription) {\r\n            this.onResumeSubscription.unsubscribe();\r\n        }\r\n\r\n        if (this._selectPeriodHandler) {\r\n\r\n            this.events.unsubscribe('app:selectPeriodMap', this._selectPeriodHandler);\r\n            this._selectPeriodHandler = undefined;\r\n\r\n        }\r\n\r\n        if (this._sunbedModalHandler) {\r\n\r\n            this.events.unsubscribe('app:presentSunbedModal', this._sunbedModalHandler);\r\n            this._sunbedModalHandler = undefined;\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/grid/grid.ts","\"use strict\";\nvar isScheduler_1 = require('../util/isScheduler');\nvar isArray_1 = require('../util/isArray');\nvar ArrayObservable_1 = require('./ArrayObservable');\nvar combineLatest_1 = require('../operators/combineLatest');\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @static true\n * @name combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    var scheduler = null;\n    if (isScheduler_1.isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return new ArrayObservable_1.ArrayObservable(observables, scheduler).lift(new combineLatest_1.CombineLatestOperator(project));\n}\nexports.combineLatest = combineLatest;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/combineLatest.js\n// module id = 469\n// module chunks = 2","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ArrayObservable_1 = require('../observable/ArrayObservable');\nvar isArray_1 = require('../util/isArray');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar none = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from this Observable with values from\n * Observables passed as arguments. This is done by subscribing to each\n * Observable, in order, and collecting an array of each of the most recent\n * values any time any of the input Observables emits, then either taking that\n * array and passing it as arguments to an optional `project` function and\n * emitting the return value of that, or just emitting the array of recent\n * values directly if there is no `project` function.\n *\n * @example <caption>Dynamically calculate the Body-Mass Index from an Observable of weight and one for height</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = weight.combineLatest(height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method combineLatest\n * @owner Observable\n */\nfunction combineLatest() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray_1.isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return function (source) { return source.lift.call(new ArrayObservable_1.ArrayObservable([source].concat(observables)), new CombineLatestOperator(project)); };\n}\nexports.combineLatest = combineLatest;\nvar CombineLatestOperator = (function () {\n    function CombineLatestOperator(project) {\n        this.project = project;\n    }\n    CombineLatestOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.project));\n    };\n    return CombineLatestOperator;\n}());\nexports.CombineLatestOperator = CombineLatestOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar CombineLatestSubscriber = (function (_super) {\n    __extends(CombineLatestSubscriber, _super);\n    function CombineLatestSubscriber(destination, project) {\n        _super.call(this, destination);\n        this.project = project;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    CombineLatestSubscriber.prototype._next = function (observable) {\n        this.values.push(none);\n        this.observables.push(observable);\n    };\n    CombineLatestSubscriber.prototype._complete = function () {\n        var observables = this.observables;\n        var len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (var i = 0; i < len; i++) {\n                var observable = observables[i];\n                this.add(subscribeToResult_1.subscribeToResult(this, observable, observable, i));\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyComplete = function (unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    };\n    CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        var values = this.values;\n        var oldVal = values[outerIndex];\n        var toRespond = !this.toRespond\n            ? 0\n            : oldVal === none ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.project) {\n                this._tryProject(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    };\n    CombineLatestSubscriber.prototype._tryProject = function (values) {\n        var result;\n        try {\n            result = this.project.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    return CombineLatestSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nexports.CombineLatestSubscriber = CombineLatestSubscriber;\n//# sourceMappingURL=combineLatest.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/operators/combineLatest.js\n// module id = 470\n// module chunks = 2"],"sourceRoot":""}